version: "3.8"

services:
  guppy:
    build:
      context: ..
      dockerfile: ./.devcontainer/Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ../..:/workspaces:cached
    networks:
      - app-network
    command: sleep infinity
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/guppy

  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/usr/local/bin/init.sh
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - app-network
    entrypoint: ["/usr/local/bin/init.sh"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d guppy && pg_isready -U postgres -d umami",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  umami:
    image: docker.umami.is/umami-software/umami:postgresql-latest
    ports:
      - 4000:3000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: xL1bbekT13g7aLN5jGzCWIZXZmpKsM/sMnIzinqQACE=
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
